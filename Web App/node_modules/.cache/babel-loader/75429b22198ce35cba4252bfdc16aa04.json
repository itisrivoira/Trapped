{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nexport const useAudio = (url, loop) => {\n  _s();\n\n  const [audio] = useState(new Audio(url));\n  const [playing, setPlaying] = useState(false);\n\n  const toggle = () => setPlaying(!playing);\n\n  useEffect(() => {\n    playing ? audio.play() : audio.pause();\n  }, [playing]);\n  useEffect(() => {\n    audio.loop = loop;\n    audio.addEventListener('ended', () => setPlaying(false));\n    return () => {\n      audio.removeEventListener('ended', () => setPlaying(false));\n    };\n  }, []);\n  return [playing, toggle];\n};\n\n_s(useAudio, \"GtM9ncdyEaTcm0NdOFCfRvb7ZtI=\");","map":{"version":3,"sources":["/home/ziobune/Trapped/Web App/src/pagine/componenti/audio/useAudio.js"],"names":["useState","useEffect","useAudio","url","loop","audio","Audio","playing","setPlaying","toggle","play","pause","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AAAA;;AACtC,QAAM,CAACC,KAAD,IAAUL,QAAQ,CAAC,IAAIM,KAAJ,CAAUH,GAAV,CAAD,CAAxB;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMS,MAAM,GAAG,MAAMD,UAAU,CAAC,CAACD,OAAF,CAA/B;;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACfM,IAAAA,OAAO,GAAGF,KAAK,CAACK,IAAN,EAAH,GAAkBL,KAAK,CAACM,KAAN,EAAzB;AACA,GAFQ,EAEN,CAACJ,OAAD,CAFM,CAAT;AAIAN,EAAAA,SAAS,CAAC,MAAM;AACfI,IAAAA,KAAK,CAACD,IAAN,GAAaA,IAAb;AACAC,IAAAA,KAAK,CAACO,gBAAN,CAAuB,OAAvB,EAAgC,MAAMJ,UAAU,CAAC,KAAD,CAAhD;AACA,WAAO,MAAM;AACZH,MAAAA,KAAK,CAACQ,mBAAN,CAA0B,OAA1B,EAAmC,MAAML,UAAU,CAAC,KAAD,CAAnD;AACC,KAFF;AAGA,GANQ,EAMN,EANM,CAAT;AAQA,SAAO,CAACD,OAAD,EAAUE,MAAV,CAAP;AACA,CAnBM;;GAAMP,Q","sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport const useAudio = (url, loop) => {\n\tconst [audio] = useState(new Audio(url));\n\tconst [playing, setPlaying] = useState(false);\n\n\tconst toggle = () => setPlaying(!playing);\n\n\tuseEffect(() => {\n\t\tplaying ? audio.play() : audio.pause();\n\t}, [playing]);\n\n\tuseEffect(() => {\n\t\taudio.loop = loop;\n\t\taudio.addEventListener('ended', () => setPlaying(false));\n\t\treturn () => {\n\t\t\taudio.removeEventListener('ended', () => setPlaying(false));\n\t \t};\n\t}, []);\n\n\treturn [playing, toggle];\n};"]},"metadata":{},"sourceType":"module"}